/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.grupo6.mc1.proyecto1.InterfazGrafica;

import com.grupo6.mc1.proyecto1.LectorArchivosXML;
import com.grupo6.mc1.proyecto1.MapaKarnaugh;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.io.File;
import java.util.Arrays;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author usuario
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    static int[][] mapa;
    static int columnasTotales;
    static int filasTotales;
    static int anchoTotal;
    static int altoTotal;
    static MapaKarnaugh mapaK;
    static PanelMapaConBurbujas PanelMapa;

    /**
     * Creates new form CargarArchivos
     */
    public PantallaPrincipal() {
        initComponents();

        PanelMapa = new PanelMapaConBurbujas(new GridBagLayout());
        ScrollMapa.setViewportView(PanelMapa);
    }

    /**
     * Función utilitaria para dibujar celdas en un grid
     *
     * @param fuente Estilo de fuente de la celda
     * @param borde Estilo de borde de la celda
     * @param texto Contenido de la celda
     * @param dimension Dimension de la celda
     */
    private void dibujarCelda(String texto, Font fuente, Border borde, Dimension dimension, GridBagConstraints gbc) {
        JLabel celda = new JLabel(texto, SwingConstants.CENTER);
        celda.setFont(fuente);
        celda.setBorder(borde);
        celda.setPreferredSize(new Dimension(100, 60));
        PanelMapa.add(celda, gbc);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VentanaSeleccionarArchivo = new javax.swing.JDialog();
        SelectorArchivo = new javax.swing.JFileChooser();
        PanelOperaciones = new javax.swing.JPanel();
        BtnCalcularMapa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFormaCanonica = new javax.swing.JLabel();
        txtFormaSimplificada = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBurbujasGeneradas = new javax.swing.JLabel();
        ScrollMapa = new javax.swing.JScrollPane();
        BarraMenus = new javax.swing.JMenuBar();
        MenuAbrir = new javax.swing.JMenu();
        ItemAbrir = new javax.swing.JMenuItem();

        VentanaSeleccionarArchivo.setSize(new java.awt.Dimension(600, 400));

        SelectorArchivo.setAcceptAllFileFilterUsed(false);
        SelectorArchivo.setFileFilter(new FileNameExtensionFilter("Archivos XML (*.xml)", "xml"));

        javax.swing.GroupLayout VentanaSeleccionarArchivoLayout = new javax.swing.GroupLayout(VentanaSeleccionarArchivo.getContentPane());
        VentanaSeleccionarArchivo.getContentPane().setLayout(VentanaSeleccionarArchivoLayout);
        VentanaSeleccionarArchivoLayout.setHorizontalGroup(
            VentanaSeleccionarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(VentanaSeleccionarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(SelectorArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE))
        );
        VentanaSeleccionarArchivoLayout.setVerticalGroup(
            VentanaSeleccionarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(VentanaSeleccionarArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(SelectorArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnCalcularMapa.setText("Calcular Mapa");
        BtnCalcularMapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCalcularMapaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Resultados");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Forma Simplificada");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Forma Disyuntiva Canónica");

        txtFormaCanonica.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFormaCanonica.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        txtFormaCanonica.setMaximumSize(new java.awt.Dimension(300, 100));
        txtFormaCanonica.setMinimumSize(new java.awt.Dimension(300, 100));
        txtFormaCanonica.setPreferredSize(new java.awt.Dimension(300, 100));

        txtFormaSimplificada.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFormaSimplificada.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        txtFormaSimplificada.setMaximumSize(new java.awt.Dimension(300, 100));
        txtFormaSimplificada.setMinimumSize(new java.awt.Dimension(300, 100));
        txtFormaSimplificada.setPreferredSize(new java.awt.Dimension(300, 100));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Burbujas generadas");

        txtBurbujasGeneradas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBurbujasGeneradas.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        txtBurbujasGeneradas.setMaximumSize(new java.awt.Dimension(300, 100));
        txtBurbujasGeneradas.setMinimumSize(new java.awt.Dimension(300, 100));
        txtBurbujasGeneradas.setPreferredSize(new java.awt.Dimension(300, 100));

        javax.swing.GroupLayout PanelOperacionesLayout = new javax.swing.GroupLayout(PanelOperaciones);
        PanelOperaciones.setLayout(PanelOperacionesLayout);
        PanelOperacionesLayout.setHorizontalGroup(
            PanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOperacionesLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(PanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelOperacionesLayout.createSequentialGroup()
                        .addGroup(PanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelOperacionesLayout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(jLabel1))
                            .addComponent(jLabel3)
                            .addGroup(PanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(PanelOperacionesLayout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(170, 170, 170))
                                .addGroup(PanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFormaSimplificada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtFormaCanonica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOperacionesLayout.createSequentialGroup()
                        .addGroup(PanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBurbujasGeneradas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnCalcularMapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(212, 212, 212))))
        );
        PanelOperacionesLayout.setVerticalGroup(
            PanelOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOperacionesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtFormaCanonica, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtFormaSimplificada, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txtBurbujasGeneradas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnCalcularMapa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MenuAbrir.setText("Archivo");

        ItemAbrir.setText("Abrir...");
        ItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemAbrirActionPerformed(evt);
            }
        });
        MenuAbrir.add(ItemAbrir);

        BarraMenus.add(MenuAbrir);

        setJMenuBar(BarraMenus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ScrollMapa, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelOperaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ScrollMapa, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemAbrirActionPerformed
        // Abrir dialogo de selecicon de archivo
        int seleccionArchivo = SelectorArchivo.showOpenDialog(VentanaSeleccionarArchivo);

        if (seleccionArchivo == JFileChooser.APPROVE_OPTION) {
            File archivo = SelectorArchivo.getSelectedFile();

            try {
                // Leer mapa cargado e inicializar variables globales de la clase
                LectorArchivosXML lector = new LectorArchivosXML();
                mapaK = lector.leerMapa(archivo);
                mapa = mapaK.mapa;
                filasTotales = mapa.length + 1;
                columnasTotales = mapa[0].length + 1;

                // Inicializar grid para rellenarlo con el mapa
                PanelMapa.removeAll();
                PanelMapa.setBurbujas(null);
                PanelMapa.setLayout(new GridBagLayout());

                // Variables de diseño
                Font encabezadoFont = new Font("Segoe UI", Font.BOLD, 16);
                Font contenidoFont = new Font("Segoe UI", Font.PLAIN, 16);
                Border bordeEncabezado = BorderFactory.createLineBorder(Color.BLACK);
                Border bordeCelda = BorderFactory.createLineBorder(Color.BLACK);

                // Variables del grid
                GridBagConstraints gbc = new GridBagConstraints();
                gbc.fill = GridBagConstraints.BOTH;

                // Obtener total de variables
                int varFilas = mapaK.varFilas;
                int varColumnas = mapaK.varColumnas;
                int totalVariables = varFilas + varColumnas;

                for (int i = 0; i < filasTotales; i++) {
                    for (int j = 0; j < columnasTotales; j++) {
                        gbc.gridx = j;
                        gbc.gridy = i;

                        JLabel celda;
                        if (i == 0 && j == 0) {
                            // Poblar la celda de la esquina con nombres de variables
                            StringBuilder textoEsquina = new StringBuilder("<html><center>");

                            // Poner variables de columnas
                            for (int v = 0; v < varFilas; v++) {
                                textoEsquina.append(mapaK.variables[v]);
                                if (v < varFilas - 1) {
                                    textoEsquina.append(", ");
                                }
                            }
                            textoEsquina.append(" \\ ");
                            // Poner variables de filas
                            for (int v = varFilas; v < totalVariables; v++) {
                                textoEsquina.append(mapaK.variables[v]);
                                if (v < totalVariables - 1) {
                                    textoEsquina.append(", ");
                                }
                            }
                            
                            textoEsquina.append("</center></html>");

                            dibujarCelda(textoEsquina.toString(), encabezadoFont, bordeEncabezado, new Dimension(100, 60), gbc);

                        } else if (i == 0) {
                            // Encabezado de columna con código Gray
                            dibujarCelda(mapaK.columnasGray[j - 1], encabezadoFont, bordeEncabezado, new Dimension(100, 40), gbc);
                        } else if (j == 0) {
                            // Encabezado de fila con código Gray                            
                            dibujarCelda(mapaK.filasGray[i - 1], encabezadoFont, bordeEncabezado, new Dimension(100, 40), gbc);
                        } else {
                            // Celda del mapa
                            dibujarCelda("" + mapa[i - 1][j - 1], contenidoFont, bordeCelda, new Dimension(100, 80), gbc);
                        }
                    }
                }

                // Poner el ancho y alto del mapa para activar el scrollView
                anchoTotal = columnasTotales * 100;
                altoTotal = filasTotales * 80;
                PanelMapa.setPreferredSize(new Dimension(anchoTotal, altoTotal));

                // Pintar el mapa
                PanelMapa.revalidate();
                PanelMapa.repaint();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,
                        "Error al leer el archivo: " + e.getMessage(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );

                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_ItemAbrirActionPerformed

    private void BtnCalcularMapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCalcularMapaActionPerformed
        var burbujas = MapaKarnaugh.obtenerBurbujas(mapaK.mapa);
        PanelMapa.setBurbujas(burbujas);

        // Esribir forma canonica
        txtFormaCanonica.setText(
                "<html><div style='width:100%;'>"
                + mapaK.generarFormaDisyuntivaCanonica()
                + "</div></html>"
        );

        // Escribir forma simplificada
        txtFormaSimplificada.setText(
                "<html><div style='width:100%;'>"
                + mapaK.generarExpresionSimplificada(burbujas)
                + "</div></html>"
        );

        // Escirbir burbujas obtenidas con color
        StringBuilder html = new StringBuilder();
        html.append("<html><table>");

        // Contador de color
        int count = 0;

        // Recorrer las burbujas para agregarlas al label
        for (int i = 0; i < burbujas.size(); i++) {
            int[][] burbuja = burbujas.get(i);
            int[] ini = burbuja[0];
            int[] fin = burbuja[1];

            // Hacer columnas de 4 burjas
            if (count % 4 == 0) {
                if (count > 0) {
                    html.append("</td>");
                }
                html.append("<td valign='top'>");
            }

            // Obtener color del borde de la burbuja
            int colorRGB = PaletaColores.coloresBordes[i];
            String hexColor = String.format("#%06X", colorRGB & 0xFFFFFF); // convertir int a color hex

            // Darle formato de lectura estético
            html.append("<span style='color: ").append(hexColor).append(";'>")
                    .append("{[")
                    .append(ini[0] + 1).append(", ").append(ini[1] + 1)
                    .append("], [")
                    .append(fin[0] + 1).append(", ").append(fin[1] + 1)
                    .append("]}</span><br>");

            count++;
        }
        html.append("</td></table></html>");

        txtBurbujasGeneradas.setText(html.toString());
    }//GEN-LAST:event_BtnCalcularMapaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar BarraMenus;
    private javax.swing.JButton BtnCalcularMapa;
    private javax.swing.JMenuItem ItemAbrir;
    private javax.swing.JMenu MenuAbrir;
    private javax.swing.JPanel PanelOperaciones;
    private javax.swing.JScrollPane ScrollMapa;
    private javax.swing.JFileChooser SelectorArchivo;
    private javax.swing.JDialog VentanaSeleccionarArchivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel txtBurbujasGeneradas;
    private javax.swing.JLabel txtFormaCanonica;
    private javax.swing.JLabel txtFormaSimplificada;
    // End of variables declaration//GEN-END:variables
}
